<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/22/2015 2:45:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="QBFSYSMS"
  DTS:CreatorName="QUICKBRIDGE\mstuewe"
  DTS:DTSID="{7351D5CF-4DD7-4157-8BCE-1AC4EB941D55}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessExperianFICOScores"
  DTS:PackageType="5"
  DTS:VersionBuild="209"
  DTS:VersionGUID="{E0241493-9731-4555-8B94-C13E3B911639}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ErrorLog]"
      DTS:CreationName="FILE"
      DTS:DTSID="{48CEE007-5733-46EF-8BAB-9B107C081A0F}"
      DTS:ObjectName="ErrorLog">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExperianFilePath]  + "_Error.txt"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="\\QBFSYSMS\SSISTesting\Experian\_Error.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel File Source]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{3419866C-56D1-44FF-96EA-70CC011384CC}"
      DTS:ObjectName="Excel File Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + @[User::CurrentFile] +";Extended Properties=\"EXCEL 8.0;HDR=YES\";"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\QBFSYSMS\SSISTesting\Experian\20150903Main.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Archive]"
      DTS:CreationName="FILE"
      DTS:DTSID="{8E00CDB5-1552-496A-BC60-64575775CCA3}"
      DTS:ObjectName="Flat File Archive">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ArchiveFolder]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="3"
          DTS:ConnectionString="\\QBFSYSMS\SSISTesting\Experian\Archive" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="ErrorLog"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{32FD7D2A-6589-446F-B053-0F1ABD63F964}"
      DTS:ObjectName="SSIS log provider for Text files2">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="List of emails to send messages to when SSNs are missing."
      DTS:DTSID="{EDC863C8-69C7-4626-9F1C-DCE8152831E1}"
      DTS:ObjectName="EmailToExperianDataIssues">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mstuewe@quickbridgefunding.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BD27373E-4BCE-4911-96D7-D86CA952CBC8}"
      DTS:ObjectName="ExcelFileExtension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Main.xls</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4735FC90-BBF5-4980-B654-3E6AEEDE03DB}"
      DTS:ObjectName="SourceExperianFicoScores">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Experian\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B9B1FDA3-72A1-4B78-8DBC-41396D84D647}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ExperianFilePath] + &quot;Archive&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CAEBA940-A196-4725-A7C3-7F7B66AA8A82}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\20150903Main.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{083AAE5A-6653-4E10-BEB7-3FBCC20CEB9F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(  REPLACE( @[User::CurrentFile]  , @[User::ExperianFilePath]  , &quot;&quot; ),@[$Package::ExcelFileExtension],&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFileDateString">
      <DTS:VariableValue
        DTS:DataType="8">20150903</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF4FB840-AEF0-4718-8E24-A7A8056B5D62}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatched">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9BB221E4-228C-4A1C-8CFA-8E6A3A5767C6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48CD9DD8-323F-40DC-9CBE-F87B3DBCFECA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2D9AABEB-94DD-4F2A-8BDF-74E465CE3C79}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::DealSSNNotMatchedCount] + &quot; rows were not able to match an existing owner.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to match an existing owner.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E05F30A-283C-46B6-8AE3-DD5E8138734A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::MissingSSNPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::DealSSNNotMatchedPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::MultipleOwnerSameSSNPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPreMessageDataIssues">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows have missing SSN.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows were not able to match an existing owner.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows have multiple owners with same SSN and DealId.&lt;br&gt;&lt;br&gt;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{95AEC1A2-F6AD-4D12-B224-F313CD6B7FBC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FailedInsertPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::FailedLookupPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPreMessageError">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to be inserted into the ExperianMigration table.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows were not able to do a lookup.&lt;br&gt;&lt;br&gt;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5E0288E7-63E6-4CA1-BB2D-C0C118DFE429}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::EmailSubjectPrefix] +&#xA;&quot;Monthly Experian FICO Score Excel File Load for &quot; +  @[User::CurrentFileDateString] + &quot;. &quot; +&#xA;(DT_WSTR,5)(@[User::MissingSSNCount] + @[User::DealSSNNotMatchedCount] + @[User::MultipleOwnerSameSSNCount] )  +&quot; row(s) with Data Issues.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubjectDataIssues">
      <DTS:VariableValue
        DTS:DataType="8">SSIS Daily Package Msg: Monthly Experian FICO Score Excel File Load for 20150903. 0 row(s) with Data Issues.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5EAE2C79-2228-49B2-B6B1-EAF83990EC8F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::EmailSubjectPrefix] +&#xA;&quot;Experian FICO Scores could not be loadded. Trade Date: &quot; +  @[User::CurrentFileDateString]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubjectError">
      <DTS:VariableValue
        DTS:DataType="8">SSIS Daily Package Msg: Experian FICO Scores could not be loadded. Trade Date: 20150903</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62389517-E93B-47C4-BF88-0E99CAD0C6E2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FFConnectionString_Risk] +  @[$Package::SourceExperianFicoScores]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExperianFilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60ECC0AA-71F4-4DFC-AA1C-010448A790F5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F48E3CAE-31AB-4278-8F60-DE00C8EC53A5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F52E18DB-973B-4236-BEBA-93A854A52B9B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::FailedInsertCount] + &quot; rows were not able to be inserted into the ExperianMigration table.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to be inserted into the ExperianMigration table.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E161D513-09B0-492B-A8FD-B17F697B8C41}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInserts">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCF03930-11C0-4681-9D0E-3C1820D5F0CD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookup">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D9EC82D-BFE4-4282-A6B7-45A2785368C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{46B40F7D-E357-45A4-A8ED-8F252D421864}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5E8F199C-AE86-4E2B-9FAA-60C8AC904DFB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::FailedLookupCount] + &quot; rows were not able to do a lookup.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to do a lookup.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B3DAD66-4FC2-4F82-AFC0-7DA24EB10876}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A7985DB-B83D-441E-800C-E98F09433E68}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CFB34A3-F4B4-4E3D-A14F-9DB54BD1E4D7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::MissingSSNCount] + &quot; rows have missing SSN.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows have missing SSN.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB9EDE7E-AC3A-4F0C-AEAD-6454A6D0FAAF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNs">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FFAAD8CA-FE2C-4BC6-AD24-24737C74D066}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSN">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34605973-86FB-483A-AD7A-988249BFE3EB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F4421C6-BCFA-400E-B02C-E6DF4529546B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A84E0FA-4EBA-4889-B99D-5BEBBB65159C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::MultipleOwnerSameSSNCount] + &quot; rows have multiple owners with same SSN and DealId.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows have multiple owners with same SSN and DealId.</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{32FD7D2A-6589-446F-B053-0F1ABD63F964}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Archive Folder"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{9AF978F0-6055-4E04-B417-4B0B6DAB632F}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Archive Folder"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="CreateDirectory"
          TaskOverwriteDestFile="True"
          TaskSourcePath="{8E00CDB5-1552-496A-BC60-64575775CCA3}"
          TaskDestinationPath="{8E00CDB5-1552-496A-BC60-64575775CCA3}" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{66D0D673-4F9C-41C1-9BE1-4BF2781E2E4F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{80356F77-85C1-4D78-A3F5-4B481A108C92}"
        DTS:ObjectName="{80356F77-85C1-4D78-A3F5-4B481A108C92}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::ExperianFilePath]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">"*" +  @[$Package::ExcelFileExtension]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\QBFSYSMS\SSISTesting\Experian\" />
            <FEFEProperty
              FileSpec="*Main.xls" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Failed Insert Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{a9890879-7ad4-41e1-92b0-646ec1f487a7}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Failed Insert Email Message"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_61f4c4de2b9440909650bee1fd680517"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FailedInsertCount,User::FailedInserts"
              ReadWriteVariables="User::FailedInsertMessage">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::FailedInsertCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::FailedInserts"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                    /// Don't return more than 10 rows.
                    icounter++;
                    if (icounter >= 10)
                    {
                        strMsg = strMsg + "<tr colspan=" + col.Ordinal + "><td>...</td></tr>";
                        break;
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::FailedInsertCount"].Value.ToString() + " record(s) were unable to be inserted into the ExperianFICOScore table. Possible duplicate records. The file was still archived to prevent reprocessing.<p>" + strMsg;
                ///MessageBox.Show(strMsg);
                Dts.Variables["User::FailedInsertMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_61f4c4de2b9440909650bee1fd680517.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_61f4c4de2b9440909650bee1fd680517</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_61f4c4de2b9440909650bee1fd680517.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_61f4c4de2b9440909650bee1fd680517.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADYF81UAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAALjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ1AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NgAAAAAAAEgAAAACAAUAeCQAAFwRAAABAAAAAAAAAMAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBACgAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPm4CAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcqMAAHATBBYTBQYHAigWAAAKbxcA
AApyswAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOJUBAAARCW8gAAAKdCQAAAETBhEG
DREEctsAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy5QAA
cAhvIwAACnLvAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy+wAA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyBwEAcCgrAAAKLDkRBHLlAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yGQEA
cCguAAAKcu8AAHAoJAAAChMEKyQRBHLlAABwCQhvJwAACm8oAAAKbywAAApy7wAAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEFF1gTBREFHwoyOhqNAQAAARMPEQ8W
EQSiEQ8Xci8BAHCiEQ8YCG8nAAAKjB4AAAGiEQ8ZckkBAHCiEQ8oLwAAChMEKwwRCW8lAAAKOl/+
///eFREJdSgAAAETEBEQLAcREG8mAAAK3BEEcm8BAHAoIQAAChMEcoEBAHACKBYAAApvFwAACnJz
AABwbxgAAApvGQAACm8sAAAKcp8BAHARBCgkAAAKEwQCKBYAAApvFwAACnLYAgBwbxgAAAoRBG8w
AAAKAigWAAAKFm8aAAAKKkFMAAACAAAArwAAADcAAADmAAAAFQAAAAAAAAACAAAAFgEAAKMAAAC5
AQAAFQAAAAAAAAACAAAAegAAAKgBAAAiAgAAFQAAAAAAAAAeAigxAAAKKgAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAApAQAACN+AAAQBQAATAcAACNT
dHJpbmdzAAAAAFwMAAAMAwAAI1VTAGgPAAAQAAAAI0dVSUQAAAB4DwAA5AEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMQAAAAIAAAAPAAAA
AgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnAC
BgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBK
BHACCgB2BGAECgCPBGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYF
FgC5BYoFFgDIBYoFFgDjBYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5
BnACBgDiBroABgDqBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJK
AFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAa
AhsAAgC0IwAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEA
vAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARi
AKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkA
awWdANkAewVdAPkAvAEbAAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7
ADkBeQbBACkBRgbFABkBiAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA
2QbBAFEB8wblAFkB2QbsACkBRgbxAOkA/gb3ABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCd
AS4AIwCdAS4AYwDDAS4ACwAsAS4AEwB0AS4AMwB0AS4AKwCdAS4AOwCjAS4AQwCdAS4AWwC6AUMA
awBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA/AACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAZBabPQAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAK
AAIFAAAAAAQAAAAAAAAAAAAAAAEAigUAAAAAAAAAAAEAAAAIBwAABQAEAAAAADxNb2R1bGU+AFNU
XzYxZjRjNGRlMmI5NDQwOTA5NjUwYmVlMWZkNjgwNTE3LmRsbABSZXNvdXJjZXMAU1RfMTYzN2U0
MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzYxZjRj
NGRlMmI5NDQwOTA5NjUwYmVlMWZkNjgwNTE3AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBJbnQzMgBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0u
RGF0YS5PbGVEYgBPbGVEYkRhdGFBZGFwdGVyAERhdGFUYWJsZQBGaWxsAERhdGFSb3dDb2xsZWN0
aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAFN5c3RlbS5Db2xsZWN0aW9u
cwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cAU3RyaW5nAENv
bmNhdABEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBEYXRhQ29sdW1uAGdldF9Db2x1
bW5OYW1lAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAZ2V0X09yZGluYWwAR2V0VHlwZQBN
ZW1iZXJJbmZvAGdldF9OYW1lAG9wX0VxdWFsaXR5AFRvU3RyaW5nAENvbnZlcnQARGF0ZVRpbWUA
VG9EYXRlVGltZQBzZXRfVmFsdWUAU1RfMTYzN2U0MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADEANgAzADcAZQA0ADAAYgA4
ADUAZgBiADQAZABjADgAOABjADMAYgA3ADMANQAzAGQANQAyADkANQBiADUANAAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAL1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBk
AEkAbgBzAGUAcgB0AEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AACdVAHMAZQByADoAOgBGAGEA
aQBsAGUAZABJAG4AcwBlAHIAdABzAAAJPAB0AHIAPgAACTwAdABkAD4AAAs8AC8AdABkAD4AAAs8
AC8AdAByAD4AABFEAGEAdABlAFQAaQBtAGUAABVNAE0ALwBkAGQALwB5AHkAeQB5AAAZPAB0AHIA
IABjAG8AbABzAHAAYQBuAD0AACU+ADwAdABkAD4ALgAuAC4APAAvAHQAZAA+ADwALwB0AHIAPgAA
ETwALwB0AGEAYgBsAGUAPgAAHVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIAAAgTcgAHIAZQBj
AG8AcgBkACgAcwApACAAdwBlAHIAZQAgAHUAbgBhAGIAbABlACAAdABvACAAYgBlACAAaQBuAHMA
ZQByAHQAZQBkACAAaQBuAHQAbwAgAHQAaABlACAARQB4AHAAZQByAGkAYQBuAEYASQBDAE8AUwBj
AG8AcgBlACAAdABhAGIAbABlAC4AIABQAG8AcwBzAGkAYgBsAGUAIABkAHUAcABsAGkAYwBhAHQA
ZQAgAHIAZQBjAG8AcgBkAHMALgAgAFQAaABlACAAZgBpAGwAZQAgAHcAYQBzACAAcwB0AGkAbABs
ACAAYQByAGMAaABpAHYAZQBkACAAdABvACAAcAByAGUAdgBlAG4AdAAgAHIAZQBwAHIAbwBjAGUA
cwBzAGkAbgBnAC4APABwAD4AADNVAHMAZQByADoAOgBGAGEAaQBsAGUAZABJAG4AcwBlAHIAdABN
AGUAcwBzAGEAZwBlAAD4QqoM81W7S6wwCOnKqyhsAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAE
AQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAAB
BCAAEm0EIAAScQUgARJ1HAMgABwHIAIIEoCBHAUgABKAhQUgABKAjQUAAg4ODgUgABKAmQMgAA4H
AAQODg4ODgMgAAIDIAAIBCABHAgEIAASUQUAAgIODgYAARGArQ4EIAEODgUAAQ4dHAQgAQEcLwcR
En0SgIESgJ0SgJEOCBKAkRKAnRKAnRKAjRKAjRKAoRKAjRGArRKAoR0cEoChRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
APw1AAAAAAAAAAAAAB42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNgAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAJs9ZBYAAAEAmz1kFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAx
ADYAMwA3AGUANAAwAGIAOAA1AGYAYgA0AGQAYwA4ADgAYwAzAGIANwAzADUAMwBkADUAMgA5ADUA
YgA1ADQAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA3ADMAMgAu
ADEANQA3ADcAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2ADEA
ZgA0AGMANABkAGUAMgBiADkANAA0ADAAOQAwADkANgA1ADAAYgBlAGUAMQBmAGQANgA4ADAANQAx
ADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA2ADEAZgA0AGMANABkAGUAMgBiADkANAA0ADAAOQAwADkANgA1ADAA
YgBlAGUAMQBmAGQANgA4ADAANQAxADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcA
MwA1ADMAZAA1ADIAOQA1AGIANQA0AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA1ADcAMwAyAC4AMQA1ADcANwAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAMwAyAC4AMQA1ADcANwAxAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{5653552f-6b4d-46f8-9f53-65dbf9b4f461}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Failed Lookup Email Message"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c63496bb1f554cc3bc84af7bfeacd98a"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FailedLookup,User::FailedLookupCount"
              ReadWriteVariables="User::FailedLookupMessage">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::FailedLookupCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::FailedLookup"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                    /// Don't return more than 10 rows.
                    icounter++;
                    if (icounter >= 10)
                    {
                        strMsg = strMsg + "<tr colspan=" + col.Ordinal + "><td>...</td></tr>";
                        break;
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::FailedLookupCount"].Value.ToString() + " record(s) could not perform a lookup. Possible duplicate records. The file was still archived to prevent reprocessing.<p>" + strMsg;
                ///MessageBox.Show(strMsg);
                Dts.Variables["User::FailedLookupMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_c63496bb1f554cc3bc84af7bfeacd98a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_c63496bb1f554cc3bc84af7bfeacd98a</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c63496bb1f554cc3bc84af7bfeacd98a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c63496bb1f554cc3bc84af7bfeacd98a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPwG81UAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAA3jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA1AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
NQAAAAAAAEgAAAACAAUAeCQAABgRAAABAAAAAAAAAMAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBACgAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPm4CAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcqMAAHATBBYTBQYHAigWAAAKbxcA
AApyswAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOJUBAAARCW8gAAAKdCQAAAETBhEG
DREEctkAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy4wAA
cAhvIwAACnLtAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy+QAA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyBQEAcCgrAAAKLDkRBHLjAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yFwEA
cCguAAAKcu0AAHAoJAAAChMEKyQRBHLjAABwCQhvJwAACm8oAAAKbywAAApy7QAAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEFF1gTBREFHwoyOhqNAQAAARMPEQ8W
EQSiEQ8Xci0BAHCiEQ8YCG8nAAAKjB4AAAGiEQ8ZckcBAHCiEQ8oLwAAChMEKwwRCW8lAAAKOl/+
///eFREJdSgAAAETEBEQLAcREG8mAAAK3BEEcm0BAHAoIQAAChMEcn8BAHACKBYAAApvFwAACnJz
AABwbxgAAApvGQAACm8sAAAKcp0BAHARBCgkAAAKEwQCKBYAAApvFwAACnKUAgBwbxgAAAoRBG8w
AAAKAigWAAAKFm8aAAAKKkFMAAACAAAArwAAADcAAADmAAAAFQAAAAAAAAACAAAAFgEAAKMAAAC5
AQAAFQAAAAAAAAACAAAAegAAAKgBAAAiAgAAFQAAAAAAAAAeAigxAAAKKgAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAApAQAACN+AAAQBQAATAcAACNT
dHJpbmdzAAAAAFwMAADIAgAAI1VTACQPAAAQAAAAI0dVSUQAAAA0DwAA5AEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMQAAAAIAAAAPAAAA
AgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnAC
BgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBK
BHACCgB2BGAECgCPBGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYF
FgC5BYoFFgDIBYoFFgDjBYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5
BnACBgDiBroABgDqBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJK
AFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAa
AhsAAgC0IwAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEA
vAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARi
AKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkA
awWdANkAewVdAPkAvAEbAAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7
ADkBeQbBACkBRgbFABkBiAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA
2QbBAFEB8wblAFkB2QbsACkBRgbxAOkA/gb3ABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCd
AS4AIwCdAS4AYwDDAS4ACwAsAS4AEwB0AS4AMwB0AS4AKwCdAS4AOwCjAS4AQwCdAS4AWwC6AUMA
awBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA/AACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAZBZ+PgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAK
AAIFAAAAAAQAAAAAAAAAAAAAAAEAigUAAAAAAAAAAAEAAAAIBwAABQAEAAAAADxNb2R1bGU+AFNU
X2M2MzQ5NmJiMWY1NTRjYzNiYzg0YWY3YmZlYWNkOThhLmRsbABSZXNvdXJjZXMAU1RfMTYzN2U0
MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2M2MzQ5
NmJiMWY1NTRjYzNiYzg0YWY3YmZlYWNkOThhAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBJbnQzMgBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0u
RGF0YS5PbGVEYgBPbGVEYkRhdGFBZGFwdGVyAERhdGFUYWJsZQBGaWxsAERhdGFSb3dDb2xsZWN0
aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAFN5c3RlbS5Db2xsZWN0aW9u
cwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cAU3RyaW5nAENv
bmNhdABEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBEYXRhQ29sdW1uAGdldF9Db2x1
bW5OYW1lAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAZ2V0X09yZGluYWwAR2V0VHlwZQBN
ZW1iZXJJbmZvAGdldF9OYW1lAG9wX0VxdWFsaXR5AFRvU3RyaW5nAENvbnZlcnQARGF0ZVRpbWUA
VG9EYXRlVGltZQBzZXRfVmFsdWUAU1RfMTYzN2U0MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADEANgAzADcAZQA0ADAAYgA4
ADUAZgBiADQAZABjADgAOABjADMAYgA3ADMANQAzAGQANQAyADkANQBiADUANAAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAL1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBk
AEwAbwBvAGsAdQBwAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AACVVAHMAZQByADoAOgBGAGEA
aQBsAGUAZABMAG8AbwBrAHUAcAAACTwAdAByAD4AAAk8AHQAZAA+AAALPAAvAHQAZAA+AAALPAAv
AHQAcgA+AAARRABhAHQAZQBUAGkAbQBlAAAVTQBNAC8AZABkAC8AeQB5AHkAeQAAGTwAdAByACAA
YwBvAGwAcwBwAGEAbgA9AAAlPgA8AHQAZAA+AC4ALgAuADwALwB0AGQAPgA8AC8AdAByAD4AABE8
AC8AdABhAGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAID1IAByAGUAYwBv
AHIAZAAoAHMAKQAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAcABlAHIAZgBvAHIAbQAgAGEAIABsAG8A
bwBrAHUAcAAuACAAUABvAHMAcwBpAGIAbABlACAAZAB1AHAAbABpAGMAYQB0AGUAIAByAGUAYwBv
AHIAZABzAC4AIABUAGgAZQAgAGYAaQBsAGUAIAB3AGEAcwAgAHMAdABpAGwAbAAgAGEAcgBjAGgA
aQB2AGUAZAAgAHQAbwAgAHAAcgBlAHYAZQBuAHQAIAByAGUAcAByAG8AYwBlAHMAcwBpAG4AZwAu
ADwAcAA+AAAzVQBzAGUAcgA6ADoARgBhAGkAbABlAGQATABvAG8AawB1AHAATQBlAHMAcwBhAGcA
ZQAASxvOjrdH+0SY2XX2WSi1jQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQA
ABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQg
AQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEF
IAESdRwDIAAcByACCBKAgRwFIAASgIUFIAASgI0FAAIODg4FIAASgJkDIAAOBwAEDg4ODg4DIAAC
AyAACAQgARwIBCAAElEFAAICDg4GAAERgK0OBCABDg4FAAEOHRwEIAEBHC8HERJ9EoCBEoCdEoCR
DggSgJESgJ0SgJ0SgI0SgI0SgKESgI0RgK0SgKEdHBKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8x
NjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAC4NQAAAAAAAAAA
AADONQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwDUAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQB+PmQWAAABAH4+ZBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADIA
LgAxADUAOQA5ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYwA2
ADMANAA5ADYAYgBiADEAZgA1ADUANABjAGMAMwBiAGMAOAA0AGEAZgA3AGIAZgBlAGEAYwBkADkA
OABhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AYwA2ADMANAA5ADYAYgBiADEAZgA1ADUANABjAGMAMwBiAGMAOAA0
AGEAZgA3AGIAZgBlAGEAYwBkADkAOABhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADkAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADkAOAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{c3dcdb42-5860-4d43-b3b4-809277f172be}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Missing Non-matched Deal and SSN Email Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d18f00af743640a0affd274e512f5c20"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DealSSNNotMatched,User::DealSSNNotMatchedCount"
              ReadWriteVariables="User::DealSSNNotMatchedMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::DealSSNNotMatchedCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::DealSSNNotMatched"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                        icounter = 1;
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::DealSSNNotMatchedCount"].Value.ToString() + " record(s) were in the source file, but the DealId and SSN combination did not match an owner in the Owner table.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::DealSSNNotMatchedMessage"].Value = strMsg;

            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d18f00af743640a0affd274e512f5c20.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_d18f00af743640a0affd274e512f5c20.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B35B93C8-6BA0-4DAE-8DC2-C5871E6E7D25}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace>
    <AssemblyName>ST_d18f00af743640a0affd274e512f5c20</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d18f00af743640a0affd274e512f5c20.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJR1AFYAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAbjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABg1AABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
NQAAAAAAAEgAAAACAAUAOCQAAOAQAAABAAAAAAAAAIAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABdAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPisCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcq0AAHATBBYTBQYHAigWAAAKbxcA
AApyvQAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOFIBAAARCW8gAAAKdCQAAAETBhEG
DREEcu0AAHAoIQAAChMEEQUtagdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy9wAA
cAhvIwAACnIBAQBwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRyDQEA
cCghAAAKEwQXEwUHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAA
Cm8pAAAKbyoAAApyGQEAcCgrAAAKLDkRBHL3AABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1y
KwEAcCguAAAKcgEBAHAoJAAAChMEKyQRBHL3AABwCQhvJwAACm8oAAAKbywAAApyAQEAcCgkAAAK
EwQRDG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6ov7//94VEQl1KAAA
ARMPEQ8sBxEPbyYAAArcEQRyQQEAcCghAAAKEwRyUwEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8Z
AAAKbywAAApycQEAcBEEKCQAAAoTBAIoFgAACm8XAAAKclwCAHBvGAAAChEEby8AAAoCKBYAAAoW
bxoAAAoqAAAAQUwAAAIAAACvAAAANwAAAOYAAAAVAAAAAAAAAAIAAAAZAQAAowAAALwBAAAVAAAA
AAAAAAIAAAB6AAAAZQEAAN8BAAAVAAAAAAAAAB4CKDAAAAoqAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACgBAAAI34AAAwFAABMBwAAI1N0cmluZ3MA
AAAAWAwAAJwCAAAjVVMA9A4AABAAAAAjR1VJRAAAAAQPAADcAQAAI0Jsb2IAAAAAAAAAAgAAAVcd
ogEJAwAAAPolMwAWAAABAAAAKwAAAAUAAAAGAAAACQAAAAEAAAAwAAAAAgAAAA8AAAACAAAAAgAA
AAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkB
ugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIG
ACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAGAEoEcAIKAHYE
YAQKAI8EYAQGAKQEbwMOAMYEFAEOAOgEFAESAEEFIQUSAFkFIQUGAHUFugAWAKgFlgUWALkFigUW
AMgFigUWAOMFigUGABEG/gUWADcGigUGAD8GugAWAE0GigUWAG4GigUGAJEGugAGALkGcAIGAOIG
ugAGAOoGugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/
AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoA
UCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCg
IAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkAAgC8IAAAAACGABoCGwACAHQj
AAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8
AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQA4BGIAoQBTBGkA
KQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQD6BI0A2QBLBZIA4QBiBZcA6QBrBZ0A2QB7
BV0A+QC8ARsAAQG8ARsA+QDDBaEAAQHaBakAEQEdBq8AGQErBp0AKQFGBrUAAQFiBrsAOQF5BsEA
KQFGBsUAGQGIBs0AQQGdBhsAOQGlBtEAIQFiBdUACQCxBtoASQHEBsEAKQHNBt8ACQDZBsEAUQHz
BuUAWQHZBuwA6QD+BvEAGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAJUBLgAjAJUBLgBjALsB
LgALACQBLgATAGwBLgAzAGwBLgArAJUBLgA7AJsBLgBDAJUBLgBbALIBQwBrAFMASQCTAIAAYQCb
AFMAgwCrAFMAdQD2AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUA
AgAFAAcABIAAAAEAAABuFkpeAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAA
AAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoAAgUAAAAABAAAAAAA
AAAAAAAAAQCKBQAAAAAAAAAAAQAAAAgHAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9kMThmMDBhZjc0
MzY0MGEwYWZmZDI3NGU1MTJmNWMyMC5kbGwAUmVzb3VyY2VzAFNUXzE2MzdlNDBiODVmYjRkYzg4
YzNiNzM1M2Q1Mjk1YjU0LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xNjM3ZTQw
Yjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBP
YmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNl
cwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVy
ZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVs
dABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRl
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF9kMThmMDBhZjc0MzY0MGEw
YWZmZDI3NGU1MTJmNWMyMABTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3Rv
cgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUASW50MzIAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIA
T2xlRGJEYXRhQWRhcHRlcgBEYXRhVGFibGUARmlsbABEYXRhUm93Q29sbGVjdGlvbgBnZXRfUm93
cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0
b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABEYXRhUm93AFN0cmluZwBDb25jYXQARGF0YUNv
bHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMARGF0YUNvbHVtbgBnZXRfQ29sdW1uTmFtZQBNb3Zl
TmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAGdldF9PcmRpbmFsAEdldFR5cGUATWVtYmVySW5mbwBn
ZXRfTmFtZQBvcF9FcXVhbGl0eQBUb1N0cmluZwBDb252ZXJ0AERhdGVUaW1lAFRvRGF0ZVRpbWUA
c2V0X1ZhbHVlAFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAxADYAMwA3AGUANAAwAGIAOAA1AGYAYgA0AGQA
YwA4ADgAYwAzAGIANwAzADUAMwBkADUAMgA5ADUAYgA1ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAADlVAHMAZQByADoAOgBEAGUAYQBsAFMAUwBOAE4AbwB0AE0A
YQB0AGMAaABlAGQAQwBvAHUAbgB0AAAPPAB0AGEAYgBsAGUAPgAAL1UAcwBlAHIAOgA6AEQAZQBh
AGwAUwBTAE4ATgBvAHQATQBhAHQAYwBoAGUAZAAACTwAdAByAD4AAAk8AHQAZAA+AAALPAAvAHQA
ZAA+AAALPAAvAHQAcgA+AAARRABhAHQAZQBUAGkAbQBlAAAVTQBNAC8AZABkAC8AeQB5AHkAeQAA
ETwALwB0AGEAYgBsAGUAPgAAHVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIAAAgOkgAHIAZQBj
AG8AcgBkACgAcwApACAAdwBlAHIAZQAgAGkAbgAgAHQAaABlACAAcwBvAHUAcgBjAGUAIABmAGkA
bABlACwAIABiAHUAdAAgAHQAaABlACAARABlAGEAbABJAGQAIABhAG4AZAAgAFMAUwBOACAAYwBv
AG0AYgBpAG4AYQB0AGkAbwBuACAAZABpAGQAIABuAG8AdAAgAG0AYQB0AGMAaAAgAGEAbgAgAG8A
dwBuAGUAcgAgAGkAbgAgAHQAaABlACAATwB3AG4AZQByACAAdABhAGIAbABlAC4APABwAD4AAD1V
AHMAZQByADoAOgBEAGUAYQBsAFMAUwBOAE4AbwB0AE0AYQB0AGMAaABlAGQATQBlAHMAcwBhAGcA
ZQAAAAB3+jVuaF3dTr5Y/f/hSz/nAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIV
BAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEO
BCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAS
cQUgARJ1HAMgABwHIAIIEoCBHAUgABKAhQUgABKAjQUAAg4ODgUgABKAmQMgAA4HAAQODg4ODgMg
AAIDIAAIBCABHAgEIAASUQUAAgIODgYAARGArQ4EIAEODgQgAQEcLQcQEn0SgIESgJ0SgJEOCBKA
kRKAnRKAnRKAjRKAjRKAoRKAjRGArRKAoRKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8xNjM3ZTQw
Yjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAABANQAAAAAAAAAAAABeNQAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDUAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBKXm4WAAABAEpebhY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwA0ADIA
LgAyADQAMQAzADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZAAx
ADgAZgAwADAAYQBmADcANAAzADYANAAwAGEAMABhAGYAZgBkADIANwA0AGUANQAxADIAZgA1AGMA
MgAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AZAAxADgAZgAwADAAYQBmADcANAAzADYANAAwAGEAMABhAGYAZgBk
ADIANwA0AGUANQAxADIAZgA1AGMAMgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADQAMgAuADIANAAxADMAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADQAMgAuADIANAAxADMAOAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Missing SSN Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{4112FD54-2EEF-4A57-A25D-62DF774A95C6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Missing SSN Email Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1637e40b85fb4dc88c3b7353d5295b54"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::MissingSSNCount,User::MissingSSNs"
              ReadWriteVariables="User::MissingSSNMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::MissingSSNCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::MissingSSNs"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                        icounter = 1;
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::MissingSSNCount"].Value.ToString() + " record(s) were missing a SSN.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::MissingSSNMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1637e40b85fb4dc88c3b7353d5295b54.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_1637e40b85fb4dc88c3b7353d5295b54.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace>
    <AssemblyName>ST_1637e40b85fb4dc88c3b7353d5295b54</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1637e40b85fb4dc88c3b7353d5295b54.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKyz9FUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAfjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQ0AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
NAAAAAAAAEgAAAACAAUAOCQAAOwPAAABAAAAAAAAAIAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABdAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPisCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcp8AAHATBBYTBQYHAigWAAAKbxcA
AApyrwAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOFIBAAARCW8gAAAKdCQAAAETBhEG
DREEctMAAHAoIQAAChMEEQUtagdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy3QAA
cAhvIwAACnLnAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy8wAA
cCghAAAKEwQXEwUHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAA
Cm8pAAAKbyoAAApy/wAAcCgrAAAKLDkRBHLdAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1y
EQEAcCguAAAKcucAAHAoJAAAChMEKyQRBHLdAABwCQhvJwAACm8oAAAKbywAAApy5wAAcCgkAAAK
EwQRDG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6ov7//94VEQl1KAAA
ARMPEQ8sBxEPbyYAAArcEQRyJwEAcCghAAAKEwRyOQEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8Z
AAAKbywAAApyVwEAcBEEKCQAAAoTBAIoFgAACm8XAAAKcpsBAHBvGAAAChEEby8AAAoCKBYAAAoW
bxoAAAoqAAAAQUwAAAIAAACvAAAANwAAAOYAAAAVAAAAAAAAAAIAAAAZAQAAowAAALwBAAAVAAAA
AAAAAAIAAAB6AAAAZQEAAN8BAAAVAAAAAAAAAB4CKDAAAAoqAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACgBAAAI34AAAwFAAAoBwAAI1N0cmluZ3MA
AAAANAwAAMwBAAAjVVMAAA4AABAAAAAjR1VJRAAAABAOAADcAQAAI0Jsb2IAAAAAAAAAAgAAAVcd
ogEJAwAAAPolMwAWAAABAAAAKwAAAAUAAAAGAAAACQAAAAEAAAAwAAAAAgAAAA8AAAACAAAAAgAA
AAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkB
ugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIG
ACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIE
PAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSADUF/QQGAFEFugAWAIQFcgUWAJUFZgUW
AKQFZgUWAL8FZgUGAO0F2gUWABMGZgUGABsGugAWACkGZgUWAEoGZgUGAG0GugAGAJUGcAIGAL4G
ugAGAMYGugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/
AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoA
UCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCg
IAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAHQj
AAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8
AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkA
KQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+BZcA6QBHBZ0A2QBX
BV0A+QC8ARsAAQG8ARsA+QCfBaEAAQG2BakAEQH5Ba8AGQEHBp0AKQEiBrUAAQE+BrsAOQFVBsEA
KQEiBsUAGQFkBs0AQQF5BhsAOQGBBtEAIQE+BdUACQCNBtoASQGgBsEAKQGpBt8ACQC1BsEAUQHP
BuUAWQG1BuwA6QDaBvEAGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAJUBLgAjAJUBLgBjALsB
LgALACQBLgATAGwBLgAzAGwBLgArAJUBLgA7AJsBLgBDAJUBLgBbALIBQwBrAFMASQCTAIAAYQCb
AFMAgwCrAFMAdQD2AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUA
AgAFAAcABIAAAAEAAABlFhZsAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAA
AAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoA3gQAAAAABAAAAAAA
AAAAAAAAAQBmBQAAAAAAAAAAAQAAAOQGAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF8xNjM3ZTQwYjg1
ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NC5kbGwAUmVzb3VyY2VzAFNUXzE2MzdlNDBiODVmYjRkYzg4
YzNiNzM1M2Q1Mjk1YjU0LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xNjM3ZTQw
Yjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBP
YmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNl
cwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVy
ZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVs
dABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRl
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
U2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBW
YXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUASW50MzIAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRh
dGEAU3lzdGVtLkRhdGEuT2xlRGIAT2xlRGJEYXRhQWRhcHRlcgBEYXRhVGFibGUARmlsbABEYXRh
Um93Q29sbGVjdGlvbgBnZXRfUm93cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBTeXN0ZW0u
Q29sbGVjdGlvbnMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABEYXRhUm93
AFN0cmluZwBDb25jYXQARGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMARGF0YUNvbHVt
bgBnZXRfQ29sdW1uTmFtZQBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAGdldF9PcmRpbmFs
AEdldFR5cGUATWVtYmVySW5mbwBnZXRfTmFtZQBvcF9FcXVhbGl0eQBUb1N0cmluZwBDb252ZXJ0
AERhdGVUaW1lAFRvRGF0ZVRpbWUAc2V0X1ZhbHVlAFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1
M2Q1Mjk1YjU0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAxADYAMwA3
AGUANAAwAGIAOAA1AGYAYgA0AGQAYwA4ADgAYwAzAGIANwAzADUAMwBkADUAMgA5ADUAYgA1ADQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBN
AGkAcwBzAGkAbgBnAFMAUwBOAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AACNVAHMAZQByADoA
OgBNAGkAcwBzAGkAbgBnAFMAUwBOAHMAAAk8AHQAcgA+AAAJPAB0AGQAPgAACzwALwB0AGQAPgAA
CzwALwB0AHIAPgAAEUQAYQB0AGUAVABpAG0AZQAAFU0ATQAvAGQAZAAvAHkAeQB5AHkAABE8AC8A
dABhAGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAEMgAHIAZQBjAG8AcgBk
ACgAcwApACAAdwBlAHIAZQAgAG0AaQBzAHMAaQBuAGcAIABhACAAUwBTAE4ALgA8AHAAPgAAL1UA
cwBlAHIAOgA6AE0AaQBzAHMAaQBuAGcAUwBTAE4ATQBlAHMAcwBhAGcAZQAAAIdRPJT1Y05BjC1c
4/Y8C8YACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIV
BAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAAS
WQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAcgAggS
gIEcBSAAEoCFBSAAEoCNBQACDg4OBSAAEoCZAyAADgcABA4ODg4OAyAAAgMgAAgEIAEcCAQgABJR
BQACAg4OBgABEYCtDgQgAQ4OBCABARwtBxASfRKAgRKAnRKAkQ4IEoCREoCdEoCdEoCNEoCNEoCh
EoCNEYCtEoChEoChRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1
M2Q1Mjk1YjU0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAEw0AAAAAAAAAAAAAG40AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABgNAAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAWbGUWAAABABZsZRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADMA
LgAyADcANgA3ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQA2
ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1AGIA
NQA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBi
ADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMwAuADIANwA2ADcAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMwAuADIANwA2ADcAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{da8a12f6-d7c7-4998-848b-b7b8ff422c62}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Multiple Owner for Same Deal and SSN Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0c483ef4276046428e4546e822c53fb7"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::MultipleOwnerSameSSN,User::MultipleOwnerSameSSNCount"
              ReadWriteVariables="User::MultipleOwnerSameSSNMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::MultipleOwnerSameSSNCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::MultipleOwnerSameSSN"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                        icounter = 1;
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::MultipleOwnerSameSSNCount"].Value.ToString() + " record(s) have multiple possible owners for the same SSN.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::MultipleOwnerSameSSNMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0c483ef4276046428e4546e822c53fb7.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_0c483ef4276046428e4546e822c53fb7.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_0c483ef4276046428e4546e822c53fb7</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0c483ef4276046428e4546e822c53fb7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMaz9FUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAADjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALw0AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NAAAAAAAAEgAAAACAAUAOCQAAIQQAAABAAAAAAAAAIAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABdAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPisCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcrMAAHATBBYTBQYHAigWAAAKbxcA
AApywwAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOFIBAAARCW8gAAAKdCQAAAETBhEG
DREEcvkAAHAoIQAAChMEEQUtagdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRyAwEA
cAhvIwAACnINAQBwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRyGQEA
cCghAAAKEwQXEwUHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAA
Cm8pAAAKbyoAAApyJQEAcCgrAAAKLDkRBHIDAQBwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1y
NwEAcCguAAAKcg0BAHAoJAAAChMEKyQRBHIDAQBwCQhvJwAACm8oAAAKbywAAApyDQEAcCgkAAAK
EwQRDG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6ov7//94VEQl1KAAA
ARMPEQ8sBxEPbyYAAArcEQRyTQEAcCghAAAKEwRyXwEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8Z
AAAKbywAAApyfQEAcBEEKCQAAAoTBAIoFgAACm8XAAAKcvkBAHBvGAAAChEEby8AAAoCKBYAAAoW
bxoAAAoqAAAAQUwAAAIAAACvAAAANwAAAOYAAAAVAAAAAAAAAAIAAAAZAQAAowAAALwBAAAVAAAA
AAAAAAIAAAB6AAAAZQEAAN8BAAAVAAAAAAAAAB4CKDAAAAoqAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACgBAAAI34AAAwFAABMBwAAI1N0cmluZ3MA
AAAAWAwAAEACAAAjVVMAmA4AABAAAAAjR1VJRAAAAKgOAADcAQAAI0Jsb2IAAAAAAAAAAgAAAVcd
ogEJAwAAAPolMwAWAAABAAAAKwAAAAUAAAAGAAAACQAAAAEAAAAwAAAAAgAAAA8AAAACAAAAAgAA
AAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkB
ugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIG
ACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAGAEoEcAIKAHYE
YAQKAI8EYAQGAKQEbwMOAMYEFAEOAOgEFAESAEEFIQUSAFkFIQUGAHUFugAWAKgFlgUWALkFigUW
AMgFigUWAOMFigUGABEG/gUWADcGigUGAD8GugAWAE0GigUWAG4GigUGAJEGugAGALkGcAIGAOIG
ugAGAOoGugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/
AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoA
UCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCg
IAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkAAgC8IAAAAACGABoCGwACAHQj
AAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8
AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQA4BGIAoQBTBGkA
KQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQD6BI0A2QBLBZIA4QBiBZcA6QBrBZ0A2QB7
BV0A+QC8ARsAAQG8ARsA+QDDBaEAAQHaBakAEQEdBq8AGQErBp0AKQFGBrUAAQFiBrsAOQF5BsEA
KQFGBsUAGQGIBs0AQQGdBhsAOQGlBtEAIQFiBdUACQCxBtoASQHEBsEAKQHNBt8ACQDZBsEAUQHz
BuUAWQHZBuwA6QD+BvEAGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAJUBLgAjAJUBLgBjALsB
LgALACQBLgATAGwBLgAzAGwBLgArAJUBLgA7AJsBLgBDAJUBLgBbALIBQwBrAFMASQCTAIAAYQCb
AFMAgwCrAFMAdQD2AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUA
AgAFAAcABIAAAAEAAABlFiNsAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAA
AAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoAAgUAAAAABAAAAAAA
AAAAAAAAAQCKBQAAAAAAAAAAAQAAAAgHAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF8wYzQ4M2VmNDI3
NjA0NjQyOGU0NTQ2ZTgyMmM1M2ZiNy5kbGwAUmVzb3VyY2VzAFNUXzE2MzdlNDBiODVmYjRkYzg4
YzNiNzM1M2Q1Mjk1YjU0LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xNjM3ZTQw
Yjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBP
YmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNl
cwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVy
ZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVs
dABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRl
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF8wYzQ4M2VmNDI3NjA0NjQy
OGU0NTQ2ZTgyMmM1M2ZiNwBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3Rv
cgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUASW50MzIAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIA
T2xlRGJEYXRhQWRhcHRlcgBEYXRhVGFibGUARmlsbABEYXRhUm93Q29sbGVjdGlvbgBnZXRfUm93
cwBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0
b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABEYXRhUm93AFN0cmluZwBDb25jYXQARGF0YUNv
bHVtbkNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMARGF0YUNvbHVtbgBnZXRfQ29sdW1uTmFtZQBNb3Zl
TmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAGdldF9PcmRpbmFsAEdldFR5cGUATWVtYmVySW5mbwBn
ZXRfTmFtZQBvcF9FcXVhbGl0eQBUb1N0cmluZwBDb252ZXJ0AERhdGVUaW1lAFRvRGF0ZVRpbWUA
c2V0X1ZhbHVlAFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAxADYAMwA3AGUANAAwAGIAOAA1AGYAYgA0AGQA
YwA4ADgAYwAzAGIANwAzADUAMwBkADUAMgA5ADUAYgA1ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAD9VAHMAZQByADoAOgBNAHUAbAB0AGkAcABsAGUATwB3AG4A
ZQByAFMAYQBtAGUAUwBTAE4AQwBvAHUAbgB0AAAPPAB0AGEAYgBsAGUAPgAANVUAcwBlAHIAOgA6
AE0AdQBsAHQAaQBwAGwAZQBPAHcAbgBlAHIAUwBhAG0AZQBTAFMATgAACTwAdAByAD4AAAk8AHQA
ZAA+AAALPAAvAHQAZAA+AAALPAAvAHQAcgA+AAARRABhAHQAZQBUAGkAbQBlAAAVTQBNAC8AZABk
AC8AeQB5AHkAeQAAETwALwB0AGEAYgBsAGUAPgAAHVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcA
IAAAeyAAcgBlAGMAbwByAGQAKABzACkAIABoAGEAdgBlACAAbQB1AGwAdABpAHAAbABlACAAcABv
AHMAcwBpAGIAbABlACAAbwB3AG4AZQByAHMAIABmAG8AcgAgAHQAaABlACAAcwBhAG0AZQAgAFMA
UwBOAC4APABwAD4AAENVAHMAZQByADoAOgBNAHUAbAB0AGkAcABsAGUATwB3AG4AZQByAFMAYQBt
AGUAUwBTAE4ATQBlAHMAcwBhAGcAZQAAAAAAghoOJ7lQXECLuZkl/GjR8wAIt3pcVhk04IkIiYRd
zYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIM
AgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFh
CAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcByACCBKAgRwFIAASgIUFIAASgI0FAAIO
Dg4FIAASgJkDIAAOBwAEDg4ODg4DIAACAyAACAQgARwIBCAAElEFAAICDg4GAAERgK0OBCABDg4E
IAEBHC0HEBJ9EoCBEoCdEoCRDggSgJESgJ0SgJ0SgI0SgI0SgKESgI0RgK0SgKESgKFHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU1RfMTYzN2U0MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQAA5DQAAAAAAAAAAAAA/jQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA0AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAjbGUWAAABACNsZRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADMA
LgAyADcANgA4ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMABj
ADQAOAAzAGUAZgA0ADIANwA2ADAANAA2ADQAMgA4AGUANAA1ADQANgBlADgAMgAyAGMANQAzAGYA
YgA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMABjADQAOAAzAGUAZgA0ADIANwA2ADAANAA2ADQAMgA4AGUANAA1
ADQANgBlADgAMgAyAGMANQAzAGYAYgA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMwAuADIANwA2ADgAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMwAuADIANwA2ADgAMwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAQNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Move Excel file to Archive Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{8CC3DA9D-E2B5-4128-B98A-6552C2F07F4B}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Excel file to Archive Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::CurrentFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="Flat File Archive" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Process Main Excel File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{75B298DC-7622-418D-ADDC-2997CCA1B3C0}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process Main Excel File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Process Main Excel File.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{998EC041-C0B3-4BA3-8A8F-29460D2B9C9C}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{1F662ADA-9F46-485F-97B5-E622B5238986}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">0</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split based on Owner SSN match"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input].Columns[OwnerIdCount]"
                          cachedDataType="i4"
                          cachedName="OwnerIdCount"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Only One Owner With SSN]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Only One Owner With SSN"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">OwnerIdCount == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Multiple Owners With Same SSN]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Multiple Owners With Same SSN"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]} &gt; 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">OwnerIdCount &gt; 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Convert NVarchar to Correct Data Types"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input].Columns[Inquiry ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input].Columns[Inquiry DealId]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry DealId"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry DealId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input].Columns[FICO Score 2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FICO Score 2"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="11"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]"
                          name="Inquiry SSN Transformed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]"
                          name="Inquiry ID Transformed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]"
                          name="Inquiry DealId Transformed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry DealId]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]"
                          name="FICO Score 2 Transformed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 2"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">2</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">2</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 3"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">3</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 4"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">4</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">4</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 5"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">2</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">2</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ErrorID 6"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Output].Columns[ErrorTypeId]"
                          name="ErrorTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">6</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">6</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Portfolio Manager - Score Updat$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel File Source]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel File Source]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry ID]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]"
                          name="Inquiry ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry SSN]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]"
                          name="Inquiry SSN"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry DealId]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Ref]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry DealId]"
                          name="Inquiry DealId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FICO Score 2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]"
                          name="FICO Score 2"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry ID]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry SSN]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Ref]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Ref" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FICO Score 2]"
                          dataType="wstr"
                          length="255"
                          name="FICO Score 2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry First Name]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry First Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Middle Name]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Middle Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Last Name]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Last Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Street Address]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Street Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Generation]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Generation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry City]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry State]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Inquiry Zip Code]"
                          dataType="wstr"
                          length="255"
                          name="Inquiry Zip Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Consumer Statements]"
                          dataType="wstr"
                          length="255"
                          name="Consumer Statements" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[F13]"
                          dataType="wstr"
                          length="255"
                          name="F13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[F14]"
                          dataType="nText"
                          name="F14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FCRA Attributes]"
                          dataType="nText"
                          name="FCRA Attributes" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[F16]"
                          dataType="wstr"
                          length="255"
                          name="F16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[F18]"
                          dataType="wstr"
                          length="255"
                          name="F18" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry ID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry ID]"
                          name="Inquiry ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry SSN]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry SSN]"
                          name="Inquiry SSN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry Ref]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Inquiry Ref]"
                          name="Inquiry Ref" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[FICO Score 2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[FICO Score 2]"
                          name="FICO Score 2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get Trade Date based on File Name"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry SSN"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE](#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]},"-","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE([Inquiry SSN],"-","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[Inquiry ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[FICO Score 2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FICO Score 2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]} == "" ? NULL(DT_WSTR,50) : #{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[FICO Score 2]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[FICO Score 2] == "" ? NULL(DT_WSTR,50) : [FICO Score 2]</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]"
                          name="TradeDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBDate)([SUBSTRING](@[User::CurrentFileDateString],1,4) + "-" + [SUBSTRING](@[User::CurrentFileDateString],5,2) + "-" + [SUBSTRING](@[User::CurrentFileDateString],7,2))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBDate)(SUBSTRING(@[User::CurrentFileDateString],1,4) + "-" + SUBSTRING(@[User::CurrentFileDateString],5,2) + "-" + SUBSTRING(@[User::CurrentFileDateString],7,2))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[CheckForNumeric]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[CheckForNumeric]"
                          name="CheckForNumeric"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]} == (DT_I4)#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]} ? 1 : 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)[Inquiry ID] == (DT_I4)[Inquiry ID] ? 1 : 0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Buffer into ExperianMigration"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ExperianMigration]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[OwnerId]"
                          cachedDataType="i4"
                          cachedName="OwnerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigrationId]"
                          dataType="i4"
                          name="ExperianMigrationId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ExperianMigration]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[OwnerId]"
                          cachedDataType="i4"
                          cachedName="OwnerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigrationId]"
                          dataType="i4"
                          name="ExperianMigrationId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[OwnerId]"
                          cachedDataType="i4"
                          cachedName="OwnerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[OwnerId]"
                          cachedDataType="i4"
                          cachedName="OwnerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 3"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 4"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 5"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert By Row into ExperianMigration_Error 6"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[ExperianMigration_Error]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 500</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">500</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].Columns[Inquiry ID Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry ID Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].Columns[ErrorTypeId]"
                          cachedDataType="i4"
                          cachedName="ErrorTypeId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Output].Columns[ErrorTypeId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[ErroredOn]"
                          dataType="dbTimeStamp"
                          name="ErroredOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTypeId]"
                          dataType="i4"
                          name="ErrorTypeId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigration_ErrorId]"
                          dataType="i4"
                          name="ExperianMigration_ErrorId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup DealOwner with SSN"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [stg].[vwDealOwnerSSN]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [stg].[vwDealOwnerSSN]) [refTable]
where [refTable].[SSN] = ? and [refTable].[DealId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DealId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OwnerId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SSN" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OwnerIdCount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]};#{Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SSN</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input].Columns[Inquiry DealId Transformed]"
                          cachedDataType="i4"
                          cachedName="Inquiry DealId Transformed"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[Inquiry DealId Transformed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">DealId</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]"
                          name="OwnerId"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OwnerId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]"
                          name="OwnerIdCount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OwnerIdCount</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Remove bad scores and seperate bad SSNs"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]"
                          name="Inquiry SSN" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input].Columns[Inquiry ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input].Columns[FICO Score 2 Transformed]"
                          cachedDataType="i4"
                          cachedName="FICO Score 2 Transformed"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Remove Scores where &lt; 1 or &gt; 850]"
                      description="Output 3 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Remove Scores where &lt; 1 or &gt; 850"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]} &lt;= 0 || #{Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]} &gt; 850 || [ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output].Columns[FICO Score 2 Transformed]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">[FICO Score 2 Transformed] &lt;= 0 || [FICO Score 2 Transformed] &gt; 850 || ISNULL([FICO Score 2 Transformed])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[SSN Exists]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="SSN Exists"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]}) &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL([Inquiry SSN]) &amp;&amp; !ISNULL([Inquiry ID])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[SSN Missing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="SSN Missing"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry SSN]}) &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output].Columns[Inquiry ID]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Inquiry SSN]) &amp;&amp; !ISNULL([Inquiry ID])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">2</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Remove Non-Rows"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input].Columns[CheckForNumeric]"
                          cachedDataType="i4"
                          cachedName="CheckForNumeric"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[CheckForNumeric]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Bad Row To Be Ignored]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Bad Row To Be Ignored"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[CheckForNumeric]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(CheckForNumeric)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Good Potential Row]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Good Potential Row"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[CheckForNumeric]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">CheckForNumeric == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Inputs[Conditional Split Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output5]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output6]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Good Potential Row]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types.Inputs[Data Conversion Input]"
                  name="Good Potential Row"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows.Outputs[Good Potential Row]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Error Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3.Inputs[Derived Column Input]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4.Inputs[Derived Column Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Multiple Owners With Same SSN]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2.Inputs[Derived Column Input]"
                  name="Multiple Owners With Same SSN"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Multiple Owners With Same SSN]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1.Inputs[Derived Column Input]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output1]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration.Inputs[OLE DB Destination Input]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Only One Owner With SSN]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration.Inputs[OLE DB Destination Input]"
                  name="Only One Owner With SSN"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Only One Owner With SSN]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Remove Scores where &lt; 1 or &gt; 850]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6.Inputs[Derived Column Input]"
                  name="Remove Scores where &lt; 1 or &gt; 850"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[Remove Scores where &lt; 1 or &gt; 850]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Exists]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]"
                  name="SSN Exists"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[SSN Exists]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Missing]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5.Inputs[Derived Column Input]"
                  name="SSN Missing"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs.Outputs[SSN Missing]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{a0a4b62e-8db7-4ace-b9cc-fe5efcaae3d3}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email for Records That Can't Be Inserted"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3ab14f93e13a41028f381a6ec9af7e1e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::EmailPreMessageError,User::EmailSubjectError,User::FailedInsertMessage,User::FailedLookupMessage,$Project::EmailSMTPPort,$Project::EmailSendFrom,$Project::EmailSendFromPassword,$Project::EmailSendToForErrors,$Project::EmailSMTPServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Settings.get_Default():ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Sett" +
    "ings")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_3ab14f93e13a41028f381a6ec9af7e1e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77A47644-B0BF-4290-A05F-2794EA65B58D}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e8445de5f16f4a6ca84011ab5dbf3e52</RootNamespace><AssemblyName>ST_3ab14f93e13a41028f381a6ec9af7e1e</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;

#endregion

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Storing SSIS variables in .Net variables. You could skip this step and call the SSIS variables in the actual mail code
            // to reduce the number of code lines. Or you could fill these .Net variables with hardcoded values.
            String SendMailFrom = Dts.Variables["$Project::EmailSendFrom"].Value.ToString();
            String SendMailFromPWD = Dts.Variables["$Project::EmailSendFromPassword"].GetSensitiveValue().ToString();
            String SendMailTo = Dts.Variables["$Project::EmailSendToForErrors"].Value.ToString();
            String SendMailSubject = Dts.Variables["User::EmailSubjectError"].Value.ToString();
            String SendMailBody = Dts.Variables["User::EmailPreMessageError"].Value.ToString() + Dts.Variables["User::FailedInsertMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::FailedLookupMessage"].Value.ToString();
            String SMTPServer = Dts.Variables["$Project::EmailSMTPServer"].Value.ToString();
            int SMTPServerPort = (int)Dts.Variables["$Project::EmailSMTPPort"].Value;

            SmtpClient smtpClient = new SmtpClient();
            MailMessage message = new MailMessage();

            MailAddress fromAddress = new MailAddress(SendMailFrom);

            //You can have multiple emails separated by ;
            string[] sEmailTo = Regex.Split(SendMailTo, ";");

            smtpClient.Host = SMTPServer;
            smtpClient.Port = SMTPServerPort;
            smtpClient.EnableSsl = true;

            System.Net.NetworkCredential myCredentials = new System.Net.NetworkCredential(SendMailFrom, SendMailFromPWD);
            smtpClient.Credentials = myCredentials;

            if (sEmailTo != null)
            {
                for (int i = 0; i < sEmailTo.Length; ++i)
                {
                    if (sEmailTo[i] != null && sEmailTo[i] != "")
                    {
                        message.To.Add(sEmailTo[i]);
                    }
                }
            }

            message.From = fromAddress;
            message.Priority = MailPriority.High;
            message.IsBodyHtml = true;
            message.Subject = SendMailSubject;
            message.Body = SendMailBody;

            smtpClient.Send(message);
			
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:DisplayName>
		<msb:ProjectId>{B97944A0-224B-491F-B14D-56C655CF4C33}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_3ab14f93e13a41028f381a6ec9af7e1e.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3ab14f93e13a41028f381a6ec9af7e1e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANkn8lUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAPjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOwzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
NAAAAAAAAEgAAAACAAUAiCMAAGQQAAABAAAAAAAAANAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBQD6AQAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyowAAcG8YAAAKbxsAAApvGgAACgsCKBYAAApvFwAACnLjAABwbxgAAApv
GQAACm8aAAAKDAIoFgAACm8XAAAKciEBAHBvGAAACm8ZAAAKbxoAAAoNAigWAAAKbxcAAApyUQEA
cG8YAAAKbxkAAApvGgAACgIoFgAACm8XAAAKcocBAHBvGAAACm8ZAAAKbxoAAApyuwEAcAIoFgAA
Cm8XAAAKctUBAHBvGAAACm8ZAAAKbxoAAAooHAAAChMEAigWAAAKbxcAAApyCQIAcG8YAAAKbxkA
AApvGgAAChMFAigWAAAKbxcAAApyPQIAcG8YAAAKbxkAAAqlHwAAARMGcx0AAAoTB3MeAAAKEwgG
cx8AAAoTCQhybQIAcCggAAAKEwoRBxEFbyEAAAoRBxEGbyIAAAoRBxdvIwAACgYHcyQAAAoTCxEH
EQtvJQAAChEKLDwWEwwrLxEKEQyaLCIRChEMmnJxAgBwKCYAAAosEREIbycAAAoRChEMmm8oAAAK
EQwXWBMMEQwRCo5pMskRCBEJbykAAAoRCBhvKgAAChEIF28rAAAKEQgJbywAAAoRCBEEby0AAAoR
BxEIby4AAAoCKBYAAAoWby8AAAoqHgIoMAAACioAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAdAQAACN+AADgBAAAMAcAACNTdHJpbmdzAAAAABAM
AAB0AgAAI1VTAIQOAAAQAAAAI0dVSUQAAACUDgAA0AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMA
AAD6JTMAFgAAAQAAACcAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAA
BAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBv
AV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3AC
BgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCP
BGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgCQBboABgCeBboACgC0BaQFCgC/BaQF
CgDLBaQFCgD2BdcFCgAtBiIGCgA/BiIGCgBwBqQFCgCaBqQFAAAAAAEAAAAAAAEAAQAAABAAMgA8
AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEA
rAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCR
IAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcg
AAAAAJEYvwSJAAIAvCAAAAAAhgAaAhsAAgDCIgAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFY
AEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEA
vAEbAJkAvAEbAAkAvAEbAKEAOARiAKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEb
ABkA+gSNANkASwWSAOEAYgWXAOkAawWdAAkAdQWhAOkAfgWdAPEAlwWlAAEBvAEbAAkBvAEbABEB
vAFYABkB/AWtAAEBAgZYAAEBCwZdAAEBFAa0ACEBvAG5AAEBUga/APEAYgbGAAkBhgbMADEBjQZY
AAkBkQbSAAkBpwbZAAkBtAa0AAkBwwZYAAkBzwZYAAEB2AbgANkA3QZdABkAvAEbAAgAFABOAAgA
GABTACkAkwCAAC4AGwBxAS4AIwBxAS4AYwCvAS4ACwAAAS4AEwBIAS4AMwBIAS4AKwB3AS4AOwCG
AS4AQwBxAS4AWwCmAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA5wACAAEAAwADAAAAbwEvAAAA
7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAYxasdwAAAAAAAM0DAAAE
AAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAA
AAAMAAAAAAAAAAAAAAAKAAIFAAAAAAAAAAABAAAA7AYAAAUABAAAAAAAADxNb2R1bGU+AFNUXzNh
YjE0ZjkzZTEzYTQxMDI4ZjM4MWE2ZWM5YWY3ZTFlLmRsbABSZXNvdXJjZXMAU1RfZTg0NDVkZTVm
MTZmNGE2Y2E4NDAxMWFiNWRiZjNlNTIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNU
X2U4NDQ1ZGU1ZjE2ZjRhNmNhODQwMTFhYjVkYmYzZTUyAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzNhYjE0Zjkz
ZTEzYTQxMDI4ZjM4MWE2ZWM5YWY3ZTFlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9J
dGVtAGdldF9WYWx1ZQBUb1N0cmluZwBHZXRTZW5zaXRpdmVWYWx1ZQBTdHJpbmcAQ29uY2F0AElu
dDMyAFN5c3RlbS5OZXQuTWFpbABTbXRwQ2xpZW50AE1haWxNZXNzYWdlAE1haWxBZGRyZXNzAFN5
c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABTcGxpdABzZXRfSG9zdABzZXRfUG9y
dABzZXRfRW5hYmxlU3NsAFN5c3RlbS5OZXQATmV0d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxz
QnlIb3N0AHNldF9DcmVkZW50aWFscwBvcF9JbmVxdWFsaXR5AE1haWxBZGRyZXNzQ29sbGVjdGlv
bgBnZXRfVG8AQWRkAHNldF9Gcm9tAE1haWxQcmlvcml0eQBzZXRfUHJpb3JpdHkAc2V0X0lzQm9k
eUh0bWwAc2V0X1N1YmplY3QAc2V0X0JvZHkAU2VuZABzZXRfVGFza1Jlc3VsdABTVF9lODQ0NWRl
NWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AABxUwBUAF8AZQA4ADQANAA1AGQAZQA1AGYAMQA2AGYANABhADYAYwBhADgANAAwADEAMQBhAGIA
NQBkAGIAZgAzAGUANQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAvJABQAHIAbwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUwBlAG4AZABGAHIAbwBtAAA/JABQAHIA
bwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUwBlAG4AZABGAHIAbwBtAFAAYQBzAHMAdwBvAHIAZAAA
PSQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMAZQBuAGQAVABvAEYAbwByAEUAcgByAG8A
cgBzAAAvVQBzAGUAcgA6ADoARQBtAGEAaQBsAFMAdQBiAGoAZQBjAHQARQByAHIAbwByAAA1VQBz
AGUAcgA6ADoARQBtAGEAaQBsAFAAcgBlAE0AZQBzAHMAYQBnAGUARQByAHIAbwByAAAzVQBzAGUA
cgA6ADoARgBhAGkAbABlAGQASQBuAHMAZQByAHQATQBlAHMAcwBhAGcAZQAAGTwAYgByAD4APABi
AHIAPgA8AGIAcgA+AAAzVQBzAGUAcgA6ADoARgBhAGkAbABlAGQATABvAG8AawB1AHAATQBlAHMA
cwBhAGcAZQAAMyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMATQBUAFAAUwBlAHIAdgBl
AHIAAC8kAFAAcgBvAGoAZQBjAHQAOgA6AEUAbQBhAGkAbABTAE0AVABQAFAAbwByAHQAAAM7AAAB
AACUSAAawJ31SpnnOeXF5LmbAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCAB
AQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUg
ARJ1HAMgABwDIAAOBwAEDg4ODg4GAAIdDg4OBCABAQIFIAIBDg4GIAEBEoCVBQACAg4OBSAAEoCZ
BiABARKAiQYgAQERgJ0GIAEBEoCFGAcNDg4ODg4OCBKAgRKAhRKAiR0OEoCRCEcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF9lODQ0NWRlNWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1MgAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE1AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAUNAAAAAAAAAAAAAAuNAAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAIDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCsd2MWAAABAKx3YxY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAAMAAw
ADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8A
ZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUAOAA0
ADQANQBkAGUANQBmADEANgBmADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUA
MgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAMwAxAC4AMwAw
ADYAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMAYQBiADEA
NABmADkAMwBlADEAMwBhADQAMQAwADIAOABmADMAOAAxAGEANgBlAGMAOQBhAGYANwBlADEAZQAu
AGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA1AAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMwBhAGIAMQA0AGYAOQAzAGUAMQAzAGEA
NAAxADAAMgA4AGYAMwA4ADEAYQA2AGUAYwA5AGEAZgA3AGUAMQBlAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBmADQA
YQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUAMgAAAEQADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMQAuADMAMAA2ADMANgAAAAAASAAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMQAuADMAMAA2
ADMANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email With Data To Be Addressed"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{ca1cc4f5-0782-4e88-98ef-a02826333625}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email With Data To Be Addressed"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e4e72e6803454599983955340fe19283"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DealSSNNotMatchedMessage,User::EmailPreMessageDataIssues,User::EmailSubjectDataIssues,User::MissingSSNMessage,User::MultipleOwnerSameSSNMessage,$Package::EmailToExperianDataIssues,$Project::EmailSMTPPort,$Project::EmailSendFrom,$Project::EmailSendFromPassword,$Project::EmailSMTPServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_e4e72e6803454599983955340fe19283.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77A47644-B0BF-4290-A05F-2794EA65B58D}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e8445de5f16f4a6ca84011ab5dbf3e52</RootNamespace><AssemblyName>ST_e4e72e6803454599983955340fe19283</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Settings.get_Default():ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Sett" +
    "ings")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;

#endregion

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                // Storing SSIS variables in .Net variables. You could skip this step and call the SSIS variables in the actual mail code
                // to reduce the number of code lines. Or you could fill these .Net variables with hardcoded values.
                String SendMailFrom = Dts.Variables["$Project::EmailSendFrom"].Value.ToString();
                String SendMailFromPWD = Dts.Variables["$Project::EmailSendFromPassword"].GetSensitiveValue().ToString();
                String SendMailTo = Dts.Variables["$Package::EmailToExperianDataIssues"].Value.ToString();
                String SendMailSubject = Dts.Variables["User::EmailSubjectDataIssues"].Value.ToString();
                String SendMailBody = Dts.Variables["User::EmailPreMessageDataIssues"].Value.ToString() + Dts.Variables["User::DealSSNNotMatchedMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::MissingSSNMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::MultipleOwnerSameSSNMessage"].Value.ToString();
                String SMTPServer = Dts.Variables["$Project::EmailSMTPServer"].Value.ToString();
                int SMTPServerPort = (int)Dts.Variables["$Project::EmailSMTPPort"].Value;

                SmtpClient smtpClient = new SmtpClient();
                MailMessage message = new MailMessage();

                MailAddress fromAddress = new MailAddress(SendMailFrom);

                //You can have multiple emails separated by ;
                string[] sEmailTo = Regex.Split(SendMailTo, ";");

                smtpClient.Host = SMTPServer;
                smtpClient.Port = SMTPServerPort;
                smtpClient.EnableSsl = true;

                System.Net.NetworkCredential myCredentials = new System.Net.NetworkCredential(SendMailFrom, SendMailFromPWD);
                smtpClient.Credentials = myCredentials;

                if (sEmailTo != null)
                {
                    for (int i = 0; i < sEmailTo.Length; ++i)
                    {
                        if (sEmailTo[i] != null && sEmailTo[i] != "")
                        {
                            message.To.Add(sEmailTo[i]);
                        }
                    }
                }

                message.From = fromAddress;
                message.Priority = MailPriority.High;
                message.IsBodyHtml = true;
                message.Subject = SendMailSubject;
                message.Body = SendMailBody;

                smtpClient.Send(message);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch(Exception ex)
            {
                Dts.Log("Error encountered: " + ex.Message, -1, null);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:CodeName>
		<msb:DisplayName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:DisplayName>
		<msb:ProjectId>{B97944A0-224B-491F-B14D-56C655CF4C33}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e4e72e6803454599983955340fe19283.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e4e72e6803454599983955340fe19283.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKb3E1YAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAnjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFA1AABLAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
NQAAAAAAAEgAAAACAAUAGCQAADgRAAABAAAAAAAAAGAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABwAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyowAAcG8YAAAKbxsAAApvGgAACgsCKBYAAApvFwAACnLjAABwbxgAAApv
GQAACm8aAAAKDAIoFgAACm8XAAAKcisBAHBvGAAACm8ZAAAKbxoAAAoNHI0eAAABEw4RDhYCKBYA
AApvFwAACnJlAQBwbxgAAApvGQAACm8aAAAKohEOFwIoFgAACm8XAAAKcqUBAHBvGAAACm8ZAAAK
bxoAAAqiEQ4YcuMBAHCiEQ4ZAigWAAAKbxcAAApy/QEAcG8YAAAKbxkAAApvGgAACqIRDhpy4wEA
cKIRDhsCKBYAAApvFwAACnItAgBwbxgAAApvGQAACm8aAAAKohEOKBwAAAoTBAIoFgAACm8XAAAK
cnECAHBvGAAACm8ZAAAKbxoAAAoTBQIoFgAACm8XAAAKcqUCAHBvGAAACm8ZAAAKpR8AAAETBnMd
AAAKEwdzHgAAChMIBnMfAAAKEwkIctUCAHAoIAAAChMKEQcRBW8hAAAKEQcRBm8iAAAKEQcXbyMA
AAoGB3MkAAAKEwsRBxELbyUAAAoRCiw8FhMMKy8RChEMmiwiEQoRDJpy2QIAcCgmAAAKLBERCG8n
AAAKEQoRDJpvKAAAChEMF1gTDBEMEQqOaTLJEQgRCW8pAAAKEQgYbyoAAAoRCBdvKwAAChEICW8s
AAAKEQgRBG8tAAAKEQcRCG8uAAAKAigWAAAKFm8vAAAK3i4TDQIoFgAACnLbAgBwEQ1vMAAACigx
AAAKFRRvMgAACgIoFgAAChdvLwAACt4AKkEcAAAAAAAAAAAAAEECAABBAgAALgAAACgAAAEeAigz
AAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
jAQAACN+AAD4BAAATAcAACNTdHJpbmdzAAAAAEQMAAAEAwAAI1VTAEgPAAAQAAAAI0dVSUQAAABY
DwAA4AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACgAAAAFAAAABgAAAAkA
AAABAAAAMwAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAA
AAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnAC
BgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAE
BPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCPBGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEF
EgBZBSEFBgCQBboABgCeBboACgC0BaQFCgC/BaQFCgDLBaQFCgD2BdcFCgAtBiIGCgA/BiIGCgBw
BqQFCgCaBqQFBgDsBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJK
AFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAa
AhsAAgBUIwAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEA
vAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARi
AKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkA
awWdAAkAdQWhAOkAfgWdAPEAlwWlAAEBvAEbAAkBvAEbABEBvAFYABkB/AWrAAEBAgZYAAEBCwZd
AAEBFAayACEBvAG3AAEBUga9APEAYgbEAAkBhgbKADEBjQZYAAkBkQbQAAkBpwbXAAkBtAayAAkB
wwZYAAkBzwZYAAEB2AbeANkA3QZdAEEB9gahAPEAlwXlANkAAgfrABkAvAEbAAgAFABOAAgAGABT
ACkAkwCAAC4AGwCCAS4AIwCCAS4AYwDAAS4ACwARAS4AEwBZAS4AMwBZAS4AKwCIAS4AOwCXAS4A
QwCCAS4AWwC3AUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA8wACAAEAAwADAAAAbwEvAAAA7gE0
AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAfRYTPAAAAAAAAM0DAAAEAAAA
AAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAM
AAAAAAAAAAAAAAAKAAIFAAAAAAAAAAABAAAABgcAAAUABAAAAAAAADxNb2R1bGU+AFNUX2U0ZTcy
ZTY4MDM0NTQ1OTk5ODM5NTUzNDBmZTE5MjgzLmRsbABSZXNvdXJjZXMAU1RfZTg0NDVkZTVmMTZm
NGE2Y2E4NDAxMWFiNWRiZjNlNTIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2U4
NDQ1ZGU1ZjE2ZjRhNmNhODQwMTFhYjVkYmYzZTUyAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lz
dGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVz
b3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBD
dWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABE
ZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2U0ZTcyZTY4MDM0
NTQ1OTk5ODM5NTUzNDBmZTE5MjgzAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2Rl
bABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVt
AGdldF9WYWx1ZQBUb1N0cmluZwBHZXRTZW5zaXRpdmVWYWx1ZQBTdHJpbmcAQ29uY2F0AEludDMy
AFN5c3RlbS5OZXQuTWFpbABTbXRwQ2xpZW50AE1haWxNZXNzYWdlAE1haWxBZGRyZXNzAFN5c3Rl
bS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABTcGxpdABzZXRfSG9zdABzZXRfUG9ydABz
ZXRfRW5hYmxlU3NsAFN5c3RlbS5OZXQATmV0d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxzQnlI
b3N0AHNldF9DcmVkZW50aWFscwBvcF9JbmVxdWFsaXR5AE1haWxBZGRyZXNzQ29sbGVjdGlvbgBn
ZXRfVG8AQWRkAHNldF9Gcm9tAE1haWxQcmlvcml0eQBzZXRfUHJpb3JpdHkAc2V0X0lzQm9keUh0
bWwAc2V0X1N1YmplY3QAc2V0X0JvZHkAU2VuZABzZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AZ2V0
X01lc3NhZ2UATG9nAFNUX2U4NDQ1ZGU1ZjE2ZjRhNmNhODQwMTFhYjVkYmYzZTUyLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBm
ADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUAMgAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBs
AFMAZQBuAGQARgByAG8AbQAAPyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMAZQBuAGQA
RgByAG8AbQBQAGEAcwBzAHcAbwByAGQAAEckAFAAYQBjAGsAYQBnAGUAOgA6AEUAbQBhAGkAbABU
AG8ARQB4AHAAZQByAGkAYQBuAEQAYQB0AGEASQBzAHMAdQBlAHMAADlVAHMAZQByADoAOgBFAG0A
YQBpAGwAUwB1AGIAagBlAGMAdABEAGEAdABhAEkAcwBzAHUAZQBzAAA/VQBzAGUAcgA6ADoARQBt
AGEAaQBsAFAAcgBlAE0AZQBzAHMAYQBnAGUARABhAHQAYQBJAHMAcwB1AGUAcwAAPVUAcwBlAHIA
OgA6AEQAZQBhAGwAUwBTAE4ATgBvAHQATQBhAHQAYwBoAGUAZABNAGUAcwBzAGEAZwBlAAAZPABi
AHIAPgA8AGIAcgA+ADwAYgByAD4AAC9VAHMAZQByADoAOgBNAGkAcwBzAGkAbgBnAFMAUwBOAE0A
ZQBzAHMAYQBnAGUAAENVAHMAZQByADoAOgBNAHUAbAB0AGkAcABsAGUATwB3AG4AZQByAFMAYQBt
AGUAUwBTAE4ATQBlAHMAcwBhAGcAZQAAMyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMA
TQBUAFAAUwBlAHIAdgBlAHIAAC8kAFAAcgBvAGoAZQBjAHQAOgA6AEUAbQBhAGkAbABTAE0AVABQ
AFAAbwByAHQAAAM7AAABACdFAHIAcgBvAHIAIABlAG4AYwBvAHUAbgB0AGUAcgBlAGQAOgAgAAAA
NfnmelGDx0mZjRfAupo0VAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZ
BQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEI
BgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAES
dRwDIAAcAyAADgUAAQ4dDgYAAh0ODg4EIAEBAgUgAgEODgYgAQESgJUFAAICDg4FIAASgJkGIAEB
EoCJBiABARGAnQYgAQESgIUFAAIODg4HIAMBDggdBR0HDw4ODg4ODggSgIESgIUSgIkdDhKAkQgS
gKEdDkcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9lODQ0NWRlNWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1
MgAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE1AAAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAHg1AAAAAAAAAAAAAI41AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAACANQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQATPH0WAAABABM8fRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAAMAAw
ADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8A
ZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUAOAA0
ADQANQBkAGUANQBmADEANgBmADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUA
MgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcANQA3AC4AMQA1
ADMANwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUANABlADcA
MgBlADYAOAAwADMANAA1ADQANQA5ADkAOQA4ADMAOQA1ADUAMwA0ADAAZgBlADEAOQAyADgAMwAu
AGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA1AAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQA0AGUANwAyAGUANgA4ADAAMwA0ADUA
NAA1ADkAOQA5ADgAMwA5ADUANQAzADQAMABmAGUAMQA5ADIAOAAzAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBmADQA
YQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUAMgAAAEQADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADUANwAuADEANQAzADcAOQAAAAAASAAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADUANwAuADEANQAz
ADcAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1F882AD5-44B3-4515-9F66-2428EEAB08D4}"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Move Excel file to Archive Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{52F79C29-E5A5-495E-8626-94903CDBB21D}"
          DTS:From="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Create Missing SSN Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{74D7B39D-CAF3-41C6-A917-0D3E1AA712C9}"
          DTS:From="Package\Foreach Loop Container\Create Failed Insert Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Create Failed Lookup Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{159EBED2-B7CF-4331-BC39-B6BFE7FCF658}"
          DTS:From="Package\Foreach Loop Container\Create Missing SSN Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{C3450BF9-21B3-48EB-9F67-B72D5698C01A}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::FailedInsertCount] &gt; 0 ||  @[User::FailedInsertCount] &gt; 0"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Create Failed Insert Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{0527372B-DC80-4C44-92D7-2FF6EBB8B267}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::DealSSNNotMatchedCount] &gt; 0 ||  @[User::MissingSSNCount] &gt; 0 ||  @[User::MultipleOwnerSameSSNCount] &gt; 0"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{1C84D07C-7D16-4CE4-96D9-159D4D1338C1}"
          DTS:From="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Send Email With Data To Be Addressed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{E88FAC3D-C1AA-455C-B079-5FAB7717BCD4}"
          DTS:From="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{AA23C675-4EF4-4DC9-81FF-2F5F1E5D494E}"
          DTS:ObjectName="{AA23C675-4EF4-4DC9-81FF-2F5F1E5D494E}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{616A22CF-78A0-4EAA-805B-11C268DA19B7}"
      DTS:From="Package\Create Archive Folder"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182,42"
          Id="Package\Create Archive Folder"
          TopLeft="619.857142857143,137.428571428571" />
        <NodeLayout
          Size="246,42"
          Id="Package\Foreach Loop Container\Create Failed Insert Email Message"
          TopLeft="748.25,115.75" />
        <NodeLayout
          Size="252,42"
          Id="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          TopLeft="751.25,199.25" />
        <NodeLayout
          Size="356,42"
          Id="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          TopLeft="41.25,109.75" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Loop Container\Create Missing SSN Email Message"
          TopLeft="92.25,201.75" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          TopLeft="39.25,291.75" />
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container\Move Excel file to Archive Folder"
          TopLeft="448.75,194.75" />
        <NodeLayout
          Size="189,42"
          Id="Package\Foreach Loop Container\Process Main Excel File"
          TopLeft="476.25,19.75" />
        <NodeLayout
          Size="300,42"
          Id="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted"
          TopLeft="730.25,290.75" />
        <NodeLayout
          Size="266,42"
          Id="Package\Foreach Loop Container\Send Email With Data To Be Addressed"
          TopLeft="81.7500000000001,374.25" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="568.25,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,133"
              Start="0,0"
              End="0,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="216.75,151.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="874.25,157.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="212.5,243.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="616,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="255.25,54"
              Start="0,0"
              End="255.25,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5008695652174" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5008695652174"
                    Point2="0,18.5008695652174"
                    Point3="4,18.5008695652174" />
                  <mssgle:LineSegment
                    End="251.25,18.5008695652174" />
                  <mssgle:CubicBezierSegment
                    Point1="251.25,18.5008695652174"
                    Point2="255.25,18.5008695652174"
                    Point3="255.25,22.5008695652174" />
                  <mssgle:LineSegment
                    End="255.25,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="119.625,23.5008695652174,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="525.5,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-306.25,48"
              Start="0,0"
              End="-306.25,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.4452173913043" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.4452173913043"
                    Point2="0,16.4452173913043"
                    Point3="-4,16.4452173913043" />
                  <mssgle:LineSegment
                    End="-302.25,16.4452173913043" />
                  <mssgle:CubicBezierSegment
                    Point1="-302.25,16.4452173913043"
                    Point2="-306.25,16.4452173913043"
                    Point3="-306.25,20.4452173913043" />
                  <mssgle:LineSegment
                    End="-306.25,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-161.125,21.4452173913043,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="212.75,333.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.5"
              Start="0,0"
              End="0,33">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="878.75,241.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5"
              Start="0,0"
              End="0,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1131,471"
          Size="1131,514"
          Id="Package\Foreach Loop Container"
          TopLeft="141,255" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="708.678571428571,179.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.5714285714286"
              Start="0,0"
              End="0,68.0714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.0714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Disable components should remain until after 1/1/2016&#xD;&#xA;to verify that they won't be requested again."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="324,60"
          Id="ce77ee99-627a-40e8-ae7e-158e615ecc78"
          TopLeft="149,175" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Process Main Excel File">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="256,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration"
          TopLeft="694,759.25" />
        <NodeLayout
          Size="170,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Remove Non-Rows"
          TopLeft="1799.59248341931,158.5" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 4"
          TopLeft="1721,662" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1"
          TopLeft="676,926" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 2"
          TopLeft="985,753" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 6"
          TopLeft="2313,549" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3"
          TopLeft="1318,754" />
        <NodeLayout
          Size="249,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name"
          TopLeft="1759,84" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 3"
          TopLeft="1403,662" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 5"
          TopLeft="2064,466" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4"
          TopLeft="1640,754" />
        <NodeLayout
          Size="271,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Convert NVarchar to Correct Data Types"
          TopLeft="1749.25,242.75" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5"
          TopLeft="1984,549" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 2"
          TopLeft="1069,661" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 6"
          TopLeft="2393,466" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Excel Source"
          TopLeft="1807,0" />
        <NodeLayout
          Size="216,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN"
          TopLeft="1359,468" />
        <NodeLayout
          Size="264,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration"
          TopLeft="693,665" />
        <NodeLayout
          Size="125,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\ErrorID 1"
          TopLeft="761,848" />
        <NodeLayout
          Size="292,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match"
          TopLeft="878.25,563.25" />
        <NodeLayout
          Size="285,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Remove bad scores and seperate bad SSNs"
          TopLeft="1746,333" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Data Conversion Output]"
          TopLeft="1886.625,284.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.25"
              Start="0,0"
              End="0,40.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Missing]"
          TopLeft="1888.5,375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="238,91"
              Start="0,0"
              End="238,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.5"
                    Point2="0,45.5"
                    Point3="4,45.5" />
                  <mssgle:LineSegment
                    End="234,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="234,45.5"
                    Point2="238,45.5"
                    Point3="238,49.5" />
                  <mssgle:LineSegment
                    End="238,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.89134765625,50.5,54.2173046875,11.4677734375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Exists]"
          TopLeft="1819.25,375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-352.25,93"
              Start="0,0"
              End="-352.25,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5747392815759" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5747392815759"
                    Point2="0,31.5747392815759"
                    Point3="-4,31.5747392815759" />
                  <mssgle:LineSegment
                    End="-348.25,31.5747392815759" />
                  <mssgle:CubicBezierSegment
                    Point1="-348.25,31.5747392815759"
                    Point2="-352.25,31.5747392815759"
                    Point3="-352.25,35.5747392815759" />
                  <mssgle:LineSegment
                    End="-352.25,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-199.8682421875,36.5747392815759,47.486484375,9.5341796875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Only One Owner With SSN]"
          TopLeft="976.916666666667,605.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-151.916666666667,59.75"
              Start="0,0"
              End="-151.916666666667,52.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.0953678474115" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.0953678474115"
                    Point2="0,24.0953678474115"
                    Point3="-4,24.0953678474115" />
                  <mssgle:LineSegment
                    End="-147.916666666667,24.0953678474115" />
                  <mssgle:CubicBezierSegment
                    Point1="-147.916666666667,24.0953678474115"
                    Point2="-151.916666666667,24.0953678474115"
                    Point3="-151.916666666667,28.0953678474115" />
                  <mssgle:LineSegment
                    End="-151.916666666667,52.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-135.105950520833,29.0953678474115,118.295234375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output1]"
          TopLeft="823.5,707">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.25"
              Start="0,0"
              End="0,44.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,16.658203125,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output]"
          TopLeft="822.75,801.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.75"
              Start="0,0"
              End="0,39.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,13.908203125,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Multiple Owners With Same SSN]"
          TopLeft="1071.58333333333,605.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.9166666666667,55.75"
              Start="0,0"
              End="59.9166666666667,48.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.4822888283379" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.4822888283379"
                    Point2="0,22.4822888283379"
                    Point3="4,22.4822888283379" />
                  <mssgle:LineSegment
                    End="55.9166666666667,22.4822888283379" />
                  <mssgle:CubicBezierSegment
                    Point1="55.9166666666667,22.4822888283379"
                    Point2="59.9166666666667,22.4822888283379"
                    Point3="59.9166666666667,26.4822888283379" />
                  <mssgle:LineSegment
                    End="59.9166666666667,48.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.6717643229166,27.4822888283379,143.2601953125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup No Match Output]"
          TopLeft="1519,510">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="264.5,152"
              Start="0,0"
              End="264.5,144.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.9024390243902" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.9024390243902"
                    Point2="0,51.9024390243902"
                    Point3="4,51.9024390243902" />
                  <mssgle:LineSegment
                    End="260.5,51.9024390243902" />
                  <mssgle:CubicBezierSegment
                    Point1="260.5,51.9024390243902"
                    Point2="264.5,51.9024390243902"
                    Point3="264.5,55.9024390243902" />
                  <mssgle:LineSegment
                    End="264.5,144.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="76.44361328125,56.9024390243902,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Match Output]"
          TopLeft="1415,510">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-390.75,53.25"
              Start="0,0"
              End="-390.75,45.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.1829268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.1829268292683"
                    Point2="0,18.1829268292683"
                    Point3="-4,18.1829268292683" />
                  <mssgle:LineSegment
                    End="-386.75,18.1829268292683" />
                  <mssgle:CubicBezierSegment
                    Point1="-386.75,18.1829268292683"
                    Point2="-390.75,18.1829268292683"
                    Point3="-390.75,22.1829268292683" />
                  <mssgle:LineSegment
                    End="-390.75,45.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-243.56638671875,23.1829268292683,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Error Output]"
          TopLeft="1466.25,510">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,152"
              Start="0,0"
              End="0,144.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,144.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-45.86638671875,66.4453125,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Good Potential Row]"
          TopLeft="1884.67124170965,200.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.25"
              Start="0,0"
              End="0,34.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.1015625,12.50048828125,88.203125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Excel Source Output]"
          TopLeft="1880.5,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,9.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output6]"
          TopLeft="1884.04624170965,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.5"
              Start="0,0"
              End="0,25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output5]"
          TopLeft="2457.75,508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output4]"
          TopLeft="2128.75,508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output3]"
          TopLeft="823.25,890">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output2]"
          TopLeft="1131.75,703">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output1]"
          TopLeft="1465.25,704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output]"
          TopLeft="1785.25,704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="See references for pattern.&#xA;* INSERT By Buffer&#xA;* INSERT By Row&#xA;* Update from SQL Task on Control Flow&#xA;&#xA;http://www.sqlservercentral.com/articles/Stairway+Series/76390/ &#xA;and Tim Mitchels SSIS presentation from Sumit 2014"
          ParentId="Package\Foreach Loop Container\Process Main Excel File"
          FontInfo="{assembly:Null}"
          Size="377,138"
          Id="098f3709-a4c1-4225-aa58-e6e8585ea89a"
          TopLeft="247,666.25" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Remove Scores where &lt; 1 or &gt; 850]"
          TopLeft="1957.75,375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="497.75,91"
              Start="0,0"
              End="497.75,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8957126303592" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.8957126303592"
                    Point2="0,30.8957126303592"
                    Point3="4,30.8957126303592" />
                  <mssgle:LineSegment
                    End="493.75,30.8957126303592" />
                  <mssgle:CubicBezierSegment
                    Point1="493.75,30.8957126303592"
                    Point2="497.75,30.8957126303592"
                    Point3="497.75,34.8957126303592" />
                  <mssgle:LineSegment
                    End="497.75,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="168.981796875,35.8957126303592,159.78640625,9.763671875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 3">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 4">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Row into ExperianMigration_Error 5">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert By Buffer into ExperianMigration">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>